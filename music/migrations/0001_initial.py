# Generated by Django 4.1.4 on 2022-12-09 15:12

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import django_better_admin_arrayfield.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('comic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_id', models.CharField(max_length=256, unique=True)),
                ('name', models.CharField(max_length=512)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('lyrics', models.TextField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('characters', models.ManyToManyField(blank=True, related_name='track_characters', to='comic.character')),
                ('commentary', models.ManyToManyField(blank=True, to='base.commentary')),
                ('files', models.ManyToManyField(blank=True, to='base.file')),
                ('locations', models.ManyToManyField(blank=True, related_name='track_locations', to='comic.location')),
                ('tags', models.ManyToManyField(blank=True, to='base.tag')),
                ('urls', models.ManyToManyField(blank=True, to='base.link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_id', models.CharField(max_length=256, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None)),
                ('image', models.ImageField(blank=True, null=True, upload_to='groups/')),
                ('type', models.CharField(choices=[('official', 'Official'), ('fans', 'Fans'), ('non-mspa', 'Non-MSPA')], default='fans', max_length=30)),
                ('urls', models.ManyToManyField(blank=True, to='base.link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_id', models.CharField(max_length=256, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None)),
                ('notes', models.TextField(blank=True, null=True)),
                ('commentary', models.ManyToManyField(blank=True, related_name='albums', to='base.commentary')),
                ('cover_art', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.art')),
                ('files', models.ManyToManyField(blank=True, related_name='albums', to='base.file')),
                ('groups', models.ManyToManyField(blank=True, related_name='albums', to='music.group')),
                ('urls', models.ManyToManyField(blank=True, to='base.link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrackReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamps', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.DurationField(), blank=True, help_text='Timestamps in the referencing track. Pairs of [[HH:]MM:]ss timestamps.', null=True, size=None)),
                ('notes', models.TextField(blank=True, null=True)),
                ('referenced_track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references_as_referenced_track', to='music.track')),
                ('referencing_track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references_as_referencing_track', to='music.track')),
            ],
            options={
                'unique_together': {('referencing_track', 'referenced_track')},
            },
        ),
        migrations.CreateModel(
            name='TrackMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.media')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track')),
            ],
            options={
                'ordering': ['position'],
                'unique_together': {('track', 'media')},
            },
        ),
        migrations.CreateModel(
            name='TrackArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist_type', models.CharField(choices=[('musician', 'Musician'), ('composer', 'Composer'), ('lyricist', 'Lyricist'), ('vocalist', 'Vocalist'), ('instrumentalist', 'Instrumentalist'), ('arranger', 'Arranger'), ('producer', 'Producer'), ('artist', 'Artist'), ('organizer', 'Organizer'), ('idea', 'Idea'), ('writer', 'Writer'), ('director', 'Director'), ('engineer', 'Engineer'), ('other', 'Other')], default='musician', max_length=30)),
                ('notes', models.TextField(blank=True, null=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.artist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track')),
            ],
            options={
                'unique_together': {('track', 'artist')},
            },
        ),
        migrations.CreateModel(
            name='TrackAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(blank=True, max_length=512, null=True)),
                ('position', models.PositiveSmallIntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.album')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track')),
                ('track_art', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.art')),
            ],
            options={
                'ordering': ['position'],
                'unique_together': {('track', 'album')},
            },
        ),
    ]
